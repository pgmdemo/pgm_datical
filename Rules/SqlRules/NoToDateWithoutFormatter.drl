package com.datical.prerules.forecast

/* 
@author Prakash Mistry
@version 1.001
@date Aug 15, 2018
@description Scan for statement with "Select [col1, col2..,a.]*[, colx, coly] from" pattern and raise Warning
*/


import com.datical.db.project.Project;
import com.datical.hammer.core.rules.Response;
import com.datical.hammer.core.rules.Response.ResponseType;
import com.datical.hammer.core.rules.WithComments;
import com.datical.hammer.core.rules.WithoutComments;
import com.datical.hammer.core.forecast.rules.RuleFunctions;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

function boolean hasDateWithoutFormat(String mySql)
{
		boolean itMatched = false;
		Pattern pattern1 = Pattern.compile("\\s+");
		Matcher matcher1 = pattern1.matcher(mySql) ;
	    String mySql1 =  matcher1.replaceAll(" ").toLowerCase().toString();
		Pattern ptoDateNoFormat = Pattern.compile("(to_date\s*\(\s*\')(?:([^,]*)(\'\s*\)))");
		  Matcher mtoDateNoFormat = ptoDateNoFormat.matcher( mySql1 );
			while(mtoDateNoFormat.find()) 
			{
				String comments =mtoDateNoFormat.group();
				System.out.println("Found TO_DATE without Date Format : "+comments );
				itMatched = true;
			}
		}
		return itMatched;
}

	
rule " TO_DATE without Date Format "
    salience 90
    when
        wc : WithoutComments(hasDateWithoutFormat(getText())) 
    then
 		String errorMessage =  "\n File " + wc.getSqlFile().getName() + " Contains TO_DATE Without Date Format ";
        insert(new Response(ResponseType.WARN, errorMessage, drools.getRule().getName()));
end
