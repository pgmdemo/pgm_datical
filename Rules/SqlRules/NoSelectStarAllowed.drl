package com.datical.prerules.forecast
/* 
@author Prakash Mistry
@version 1.001
@date Aug 16, 2018
@description Scan for statement with "Select [col1, col2..] [x.]*[, colx, coly] from" pattern and raise Warning
*/

import com.datical.db.project.Project;
import com.datical.hammer.core.rules.Response;
import com.datical.hammer.core.rules.Response.ResponseType;
import com.datical.hammer.core.rules.WithComments;
import com.datical.hammer.core.rules.WithoutComments;
import com.datical.hammer.core.forecast.rules.RuleFunctions;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

function boolean hasSelectStar(String mySql)
{
		boolean itMatched = false;
		String mySql1 = new String();
		Pattern pattern0;
		Matcher matcher0 ;
		
		pattern0 = Pattern.compile("\'\'");
		matcher0 = pattern0.matcher(mySql) ;
	    mySql1 =    matcher0.replaceAll(" ").toString();

		pattern0 = Pattern.compile("\'.*\'");
		matcher0 = pattern0.matcher(mySql1) ;
	    mySql1 =    matcher0.replaceAll(" ").toString();

		pattern0 = Pattern.compile("\\s+");
		matcher0 = pattern0.matcher(mySql1) ;
	    mySql1 =  matcher0.replaceAll(" ").toLowerCase().toString();

		
		Pattern pSelectStar = Pattern.compile("select (([^*]|.*)\\*((?:!\bfrom\b)|.*)from)");
		
		Matcher mSelectStar = pSelectStar.matcher( mySql1 );
		while(mSelectStar.find()) 
		{ 
			   for (String newSQl : mSelectStar.group().split("select")) {
					  if (newSQl.indexOf(" from") > 0) {
					    newSQl= newSQl.substring(0,newSQl.indexOf(" from"));
					  }
					  if (newSQl.indexOf(" into ") > 0) {
					     newSQl= newSQl.substring(0,newSQl.indexOf(" into "));
					  } 
				    for (String newSQl1 : newSQl.split(",")) {
					   if (newSQl1.equals(" * ") || (newSQl1.indexOf(".*") > 0 ) ) {
						  System.out.println("Select * Rule Voilated -->" + newSQl ) ;
					      itMatched = true;
						  return itMatched;
					   }
						
					}
			    }  // End of For Loop
		}
 return itMatched;
}

	
rule " Code with Select * "
    salience 91
    when
        wc : WithoutComments(hasSelectStar(getText())) 
    then
 		String errorMessage =  "\n File " + wc.getSqlFile().getName() + " Contains Select * Statement ";
        insert(new Response(ResponseType.FAIL, errorMessage, drools.getRule().getName()));
end
